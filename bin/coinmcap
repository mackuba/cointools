#!/usr/bin/env ruby

require 'bundler/setup'
require 'cointools'

require 'optparse'
require 'time'

def print_help
  puts "Usage: #{$PROGRAM_NAME} <coin_name> [-b/--btc-price] [-v/--verbose]"
  puts " e.g.: #{$PROGRAM_NAME} litecoin"
  puts
  puts "* To look up the currency by symbol instead of name (slower, downloads more data):"
  puts "       #{$PROGRAM_NAME} -s/--symbol <symbol> [-b/--btc-price] [-v/--verbose]"
  puts " e.g.: #{$PROGRAM_NAME} -s LTC"
end

verbose = false
btc_price = false
symbol = nil

OptionParser.new do |opts|
  opts.on('-v', '--verbose') { verbose = true }
  opts.on('-b', '--btc-price') { btc_price = true }

  opts.on('-h', '--help') do
    print_help
    exit 0
  end

  opts.on('-sSYMBOL', '--symbol SYMBOL') { |s| symbol = s }

  opts.parse!
end

unless symbol
  if ARGV.length != 1
    print_help
    exit 1
  end

  coin_name = ARGV[0].downcase
end

begin
  if symbol
    result = CoinTools::CoinMarketCap.new.get_price_by_symbol(symbol)
  else
    result = CoinTools::CoinMarketCap.new.get_price(coin_name)
  end

  price = btc_price ? result.btc_price : result.usd_price

  if verbose
    puts "#{symbol&.upcase || coin_name} @ #{result.time || Time.now} ==> #{price}"
    puts
  else
    puts price
  end
rescue CoinTools::Cryptowatch::BadRequestException => e
  $stderr.puts "Error: Incorrect coin name: #{e}"
  exit 2
rescue CoinTools::Cryptowatch::NoDataException => e
  $stderr.puts "Error: #{e}"
  exit 3
end
