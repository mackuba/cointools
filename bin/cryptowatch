#!/usr/bin/env ruby

require 'bundler/setup'
require 'cointools'

require 'optparse'
require 'time'

def print_help
  puts "Usage: #{$PROGRAM_NAME} <exchange> <market> [<date>] [-v/--verbose]"
  puts " e.g.: #{$PROGRAM_NAME} gdax btcusd \"2017-06-30 15:27\""
  puts
  puts "* To print a list of available exchanges:"
  puts "       #{$PROGRAM_NAME} --list-exchanges"
  puts "* To print a list of available markets on an exchange:"
  puts "       #{$PROGRAM_NAME} --list-markets kraken"
end

verbose = false

OptionParser.new do |opts|
  opts.on('-v', '--verbose') { verbose = true }

  opts.on('-h', '--help') do
    print_help
    exit 0
  end

  opts.on('--list-exchanges') do
    puts CoinTools::Cryptowatch.new.exchanges
    exit 0
  end

  opts.on('--list-markets EXCHANGE') do |exchange|
    begin
      puts CoinTools::Cryptowatch.new.get_markets(exchange)
      exit 0
    rescue CoinTools::Cryptowatch::BadRequestException => e
      $stderr.puts "Error: Incorrect exchange name: #{e}"
      exit 3
    end
  end

  opts.parse!
end

if ARGV.length < 2 || ARGV.length > 3
  print_help
  exit 1
end

exchange = ARGV[0].downcase
market = ARGV[1].downcase
date = Time.parse(ARGV[2]) if ARGV[2]

begin
  result = CoinTools::Cryptowatch.new.get_price(exchange, market, date)

  if verbose
    puts "#{exchange}:#{market} @ #{result.time || Time.now} ==> #{result.price}"
    puts
  else
    puts result.price
  end
rescue CoinTools::Cryptowatch::InvalidDateException => e
  $stderr.puts "Error: #{e}"
  exit 2
rescue CoinTools::Cryptowatch::BadRequestException => e
  $stderr.puts "Error: Incorrect exchange or market name: #{e}"
  exit 3
rescue CoinTools::Cryptowatch::NoDataException => e
  $stderr.puts "Error: #{e}: data not ready yet"
  exit 4
end
